jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin\n\n"
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: admin
         password: ${ADMIN_PW}
  authorizationStrategy: loggedInUsersCanDoAnything

  nodes:
    - permanent:
        name: "kuber-agent"
        remoteFS: "/home/kube"
        labelString: "kuber"
        launcher:
          ssh:
            host: "10.0.20.100"
            port: "22"
            credentialsId: repo_key
            sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"

  clouds:
  - ec2Fleet:
        name: ec2-fleet
        awsCredentialsId: aws-creds
        oldId: ""
        computerConnector:
          sshConnector:
            credentialsId: "fleet_key" # This is the name of the ssh key secret configured from secret manager
            launchTimeoutSeconds: 60
            maxNumRetries: 10
            port: 22
            retryWaitTime: 15
            sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
        region: us-west-2
        fleet: my-fleet
        fsRoot: "/home/ec2-user"
        privateIpUsed: false
        alwaysReconnect: true
        labelString: myLabel
        idleMinutes: 5
        minSize: 1
        maxSize: 1
        numExecutors: 1
        addNodeOnlyIfRunning: true
        restrictUsage: true
        scaleExecutorsByWeight: true
        initOnlineTimeoutSec: 181
        initOnlineCheckIntervalSec: 13
        cloudStatusIntervalSec: 11
        disableTaskResubmit: true
        noDelayProvision: true


jobs:
  - script: >
      multibranchPipelineJob('artur-last-task') {
          branchSources {
              git {
                  id = 'configuration-as-code'
                  remote('git@github.com:sabotageivet123/artur-final-task.git')
                  credentialsId('repo_key')
              }
          }
      }
      triggers {
        periodicFolderTrigger {
          interval('1')
        }
      }
      

tool:
  git:
    installations:
      - name: git
        home: /usr/bin/git

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "AWS credentials"
              id: "aws-creds"
              password: ${AWS_SECRET_ACCESS_KEY}
              scope: GLOBAL
              username: ${AWS_ACCESS_KEY_ID}
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: repo_key
              username: kube
              description: "Repo key"
              privateKeySource:
                directEntry:
                  privateKey: ${REPO_KEY}
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: fleet_key
              username: ec2-user
              description: "SSH For EC2"
              privateKeySource:
                directEntry:
                  privateKey: ${EC2_KEY}
          - usernamePassword:
              description: "Docker login"
              id: "dockerhub"
              password: ${DOCKER_PASS}
              scope: GLOBAL
              username: ${DOCKER_LOGIN}
